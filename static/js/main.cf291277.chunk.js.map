{"version":3,"sources":["SingleColor.js","App.js","reportWebVitals.js","index.js"],"names":["SingleColor","rgb","weight","index","hexCol","useState","alert","setAlert","bcg","join","hexval","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","Form","onSubmit","e","preventDefault","colors","Row","Col","xs","Control","type","placeholder","value","onChange","target","Button","variant","map","hex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA6BeA,EA1BK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OAAa,EAC5BC,oBAAS,GADmB,mBAC/CC,EAD+C,KACxCC,EADwC,KAEhDC,EAAMP,EAAIQ,KAAK,KACfC,EAAM,WAAON,GAQnB,OANAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACR,KACH,OAAO,kBAAIO,aAAaF,MACxB,CAACN,IACI,0BAASS,UAAS,gBAAWZ,EAAQ,IAAM,eAChDa,MAAO,CACLC,gBAAgB,OAAD,OAAST,EAAT,MAEjBU,QAAS,WACPX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,IAN3B,UASL,oBAAGK,UAAU,UAAb,UAAwBb,EAAxB,OACA,mBAAGa,UAAU,UAAb,SAAwBL,IACvBJ,GAAS,mBAAGS,UAAU,QAAb,mC,wBCgCCO,MAnDf,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNkB,EADM,KACCC,EADD,OAEanB,oBAAS,GAFtB,mBAENoB,EAFM,KAECC,EAFD,OAGWrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,IAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAeb,OACE,qCACE,yBAASf,UAAU,yBAAnB,SACE,cAACgB,EAAA,EAAD,CAAMC,SAbS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIR,IAAOJ,GAAOK,IAAI,GACnCE,EAAQK,GACRT,GAAS,GACT,MAAOD,GACPC,GAAS,KAMP,SACE,eAACK,EAAA,EAAKK,IAAN,CAAUrB,UAAU,YAApB,UACE,cAACsB,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,mDAEF,cAACD,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,cAACP,EAAA,EAAKQ,QAAN,aACExB,UAAU,OACVyB,KAAK,OACLC,YAAY,UACZC,MAAOnB,EACPoB,SAAU,SAACV,GAAD,OAAOT,EAASS,EAAEW,OAAOF,SALrC,sBAOgBjB,EAAO,OAAQ,UAGjC,cAACY,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,cAACO,EAAA,EAAD,CAAQL,KAAK,SAASzB,UAAU,OAAO+B,QAAQ,eAA/C,6BAOR,yBAAS/B,UAAU,mBAAnB,SACGc,EAAKkB,KAAI,SAACxB,EAAOpB,GAChB,OAAO,cAAC,EAAD,2BAA6BoB,GAA7B,IAAoCpB,MAAOA,EAAOC,OAAQmB,EAAMyB,MAA9C7C,YCtCpB8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cf291277.chunk.js","sourcesContent":["  \r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst SingleColor = ({ rgb, weight, index, hexCol }) => {\r\n  const [alert, setAlert] = useState(false)\r\n  const bcg = rgb.join(',')\r\n  const hexval = `#${hexCol}`\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setAlert(false)\r\n    }, 2000)\r\n    return ()=>clearTimeout(timeout)\r\n  },[alert])\r\n  return <article className={`color ${index > 15 && 'color-light'}`}\r\n    style={{\r\n      backgroundColor: `rgb(${bcg})`\r\n    }}\r\n    onClick={()=> {\r\n      setAlert(true)\r\n      navigator.clipboard.writeText(hexval)\r\n    }}\r\n  >\r\n    <p className=\"content\">{weight}%</p>\r\n    <p className=\"content\">{hexval}</p>\r\n    {alert && <p className=\"alert\">copy to clipboard</p>}\r\n    </article>\r\n}\r\n\r\nexport default SingleColor","import React, { useState } from 'react';\nimport './App.css';\nimport Values from 'values.js'\nimport SingleColor from './SingleColor'\nimport { Form, Button, Col } from 'react-bootstrap';\n\nfunction App() {\n  const [color, setColor] = useState('');\n  const [error, setError] = useState(false);\n  const [list, setList] = useState(new Values('#810000').all(5));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(5)\n      setList(colors)\n      setError(false)\n    } catch (error) {\n      setError(true)\n    }\n  }\n  return (\n    <>\n      <section className=\"container main-section\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Row className=\"forminput\">\n            <Col xs=\"auto\">\n              <h3>Color Generator</h3>\n            </Col>\n            <Col xs=\"auto\">\n              <Form.Control\n                className=\"mb-2\"\n                type=\"text\"\n                placeholder=\"#810000\"\n                value={color}\n                onChange={(e) => setColor(e.target.value)}\n                // eslint-disable-next-line react/jsx-no-duplicate-props\n                className={`${error? 'Eror': null}`}\n              />\n            </Col>\n            <Col xs=\"auto\">\n              <Button type=\"submit\" className=\"mb-2\" variant=\"outline-info\">\n                Submit\n              </Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </section>\n      <section className=\"container colors\">\n        {list.map((color, index) => {\n          return <SingleColor key={index} {...color} index={index} hexCol={color.hex}/>\n        })}\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}